# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
orbs:
  aws-cli: circleci/aws-cli@0.1.4
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:10.16.0-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm install
      
      - run: sudo npm install -g grunt
      
      - run: grunt lint
      - run: grunt test
      - run: grunt docs
      - run: grunt node
      - run: grunt prod --msg="$COMPILE_MSG"
      - run: xvfb-run -a grunt testui
      
      - run: grunt exec:sitemap
      - run: grunt copy:ghPages
      
      - run:
          name: Copy artifacts to single directory
          command: mkdir artifacts && cp build/prod/*.zip artifacts/ && cp build/node/CyberChef.js artifacts/
      - store_artifacts:
          path: artifacts/
      - persist_to_workspace:
          root: .
          paths:
            - artifacts

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
          
  deploy:
    docker:
      - image: circleci/python:3.6.1
    environment:
      AWS_DEFAULT_OUTPUT: json
    steps:
      - attach_workspace:
          at: workspace
      - aws-cli/install
      - aws-cli/configure:
          aws-access-key-id: "$AWS_ACCESS_KEY_ID"
          aws-region: "$AWS_DEFAULT_REGION"
      - run:
          name: Extract artifacts
          command: mkdir workspace/artifacts/out && unzip workspace/artifacts/*.zip -d workspace/artifacts/out/
      - run:
          name: Deploy to S3
          command: cd workspace/artifacts/out && aws s3 cp --recursive . s3://circle-cyberchef-test/
      - run: echo 'Now deployed to http://circle-cyberchef-test.s3-website-eu-west-1.amazonaws.com'
        
workflows:
  version: 2
  all:
    jobs:
      - build
      - deploy:
          requires:
            - build
